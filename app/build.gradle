apply plugin: 'com.android.application'

// Apollo
// This must go AFTER com.android.application plugin and BEFORE Kotlin plugin
apply plugin: 'com.apollographql.android'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.gpetuhov.android.samplegraphql"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // This is required by OkHttp
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Apollo
    implementation "com.apollographql.apollo:apollo-runtime:$apolloVersion"

    // KAndroid
    implementation 'com.pawegio.kandroid:kandroid:0.8.8@aar'

    // IMPORTANT: Without this project will not build
    // (because @Generated annotation in generated classes is unknown)
    implementation 'javax.annotation:jsr250-api:1.0'

    // OkHttp (Apollo uses OkHttp under the hood)
    implementation 'com.squareup.okhttp3:okhttp:3.13.1'
}
